version: 2
jobs:
  build:
    docker:
        - image: nearform/docker_circleci:0.0.2
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Info
          command: |
            make envinfo
      - run:
          name: Configure
          command: |
            if [[ -z $NODE_VERSION || -z $V8_VERSION || -z $NPM_VERSION || -z $IMAGE_TAG ]]; then
              if [[ -z $VERSION || -z $V8 || -z $NPM || -z $TAG ]]; then
                echo 'one or more variables are undefined'
                echo "Assuming build script debug mode"
                export VERSION=6.12.1
                export V8=5.1.281.109
                export NPM=3.10.10
                export TAG=test-only
                export NODE_VERSION=$VERSION
                export V8_VERSION=$V8
                export NPM_VERSION=$NPM
                export IMAGE_TAG=$TAG

                ./configure --version "$VERSION" \
                        --v8 "$V8" \
                        --npm "$NPM" \
                        --tag "$TAG" \
                        --debug \
                        --prebuilt
              else
                export NODE_VERSION=$VERSION
                export V8_VERSION=$V8
                export NPM_VERSION=$NPM
                export IMAGE_TAG=$TAG

                ./configure --version "$VERSION" \
                        --v8 "$V8" \
                        --npm "$NPM" \
                        --tag "$TAG" \
                        --lts "$LTS" \
                        --major "$MAJOR" \
                        --minor "$MINOR" \
                        --prebuilt
              fi
            fi

      - run:
          name: Build
          command: make build
      - run:
          name: Docker squash
          command: make squash
      - run:
          name: Test
          command: make test
      - run:
          name: Tag LTS if this is an LTS release
          command: make tag
      - run:
          name: Publish
          command: |
            make publish
      - run:
          name: Publish to Red Hat
          command: |
            echo $(./~/getRepoSecret.sh) | docker login -u unused registry.rhc4tp.openshift.com:443 --password-stdin
            make redhat_publish
      - run:
          name: Archive
          command: |
            make archive
      - run:
          name: Upload
          command: |
            pip install --user python-dateutil
            pip install --user --no-deps s3cmd
            echo "access_key = $AWS_ACCESS_KEY_ID" >> ~/.s3cfg
            echo "secret_key = $AWS_SECRET_ACCESS_KEY" >> ~/.s3cfg
            export PATH="${PATH}:${HOME}/.local/bin/"
            make upload

